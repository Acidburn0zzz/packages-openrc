#!/bin/bash 
# Copyright 2013 udeved@openrc4arch.site40.net
# Distributed under the terms of the GNU General Public License v2

. /etc/lsb-release

VER=0.2 #"$(date +%Y%m%d)"
PKGNAME='openrc-plugins'
DATADIR="${PKGNAME}"
EXT="xz"
PRE=""

mkdirs() {
	mkdir -p "${DATADIR}/$1"
}

get_file() {
	# $1: file
	# $2: src
	if [ ! -f "$1" ]; then
		echo "DOWLOADING" $2; echo
		curl -o "$1" "$2"; echo
		echo "DONE" $1; echo
	fi
}

mk_str() {
	# $1: filename
	# $2: pattern1
	# $3: pattern2
	if ! grep -Fq "$3" $1; then
		echo "FAIL" `basename $1` "DETECTED:" $2; echo
		echo "FIXING ..."; echo
		sed  -e "s|$2|$3|g" -i $1
		echo "DONE" `basename $1` "FIXED:" $3; echo
	else
		echo "PASS" `basename $1` "TEST:" $3; echo
	fi
		
}

rm_str(){
	# $1: filename
	# $2: pattern1
	# $3: pattern2
	if  grep -Fq "$2" "$1"; then 
		echo "FAIL" `basename $1` "DETECTED:" $2; echo
		echo "FIXING ... "; echo
		sed  -e "s|$2|$3|g" -i $1
		echo "DONE" `basename $1` "FIXED:" $3; echo
	else
		echo "PASS" `basename $1` "TEST:" $3; echo
	fi

}

check(){
	# $1: type
	# $2: file
	# $3: dirname
	if [ "$1" = "init.d" ]; then
		
		rm_str "$2" '/var/run' '/run'
		
		if [ "$3" = "dbus" ]; then
		
			mk_str $2 'dbus.pid' 'dbus/pid'
		
		elif [ "$3" = "bind" ]; then
			
			mk_str $2 '/etc/bind/named.conf' '/etc/named.conf'
		
		elif [ "$3" = "dhcp" ]; then
			
			if [ `basename $2 | grep "dhcpd"` ];then
			
				mk_str $2 '/etc/dhcp/${SVCNAME}' '/etc/${SVCNAME}'
			
			fi
		
		elif [ "$3" = "ufw" ]; then
			
			mk_str $2 '/usr/share/ufw/ufw-init-functions' '/usr/lib/ufw/ufw-init-functions'
		
		elif [ "$3" = "xorg-server" ]; then
		
			if [ `basename $2 | grep "xdm.initd"` ];then
				rm_str $2 '/etc/profile.env' '/etc/profile'
				mk_str $2 'ROOTPATH' 'PATH'
			fi
		
		elif [ "$3" = "mysql" ]; then
			
			mk_str $2 '/usr/bin/safe_mysqld' '/usr/bin/mysqld_safe'
		
		elif [ "$3" = "ntp" ]; then
			
			if [ `basename $2 | grep "ntpd"` ];then
				mk_str $2 '/usr/sbin/ntpd' '/usr/bin/ntpd'	
			fi
			
		elif [ "$3" = "openntpd" ]; then
			
			mk_str $2 '/usr/sbin/ntpd' '/usr/bin/ntpd'
			
		elif [ "$3" = "virtualbox-guest-additions" ]; then
			
			mk_str $2 'vboxguest-service' 'VBoxService'
			
			mk_str $2 '/usr/sbin/VBoxService' '/usr/bin/VBoxService'
			
		elif [ "$3" = "hostapd" ]; then
			
			mk_str $2 '/usr/sbin/hostapd' '/usr/bin/hostapd'	
		
		fi
		
		if [ "${PRE}" = "/usr" ]; then
			
			mk_str $2 '#!/sbin/runscript' "#!${PRE}/sbin/runscript"
			
			if [ "$3" = "lvm2" ]; then
				
				if [ `basename $2 | grep "lvm"` ];then
					
					mk_str $2 '/bin/lvm /sbin/lvm' "${PRE}/bin/lvm ${PRE}/sbin/lvm"
								
				elif [ `basename $2 | grep "device-mapper"` ];then
					
					mk_str $2 '/sbin/dmsetup' "${PRE}/sbin/dmsetup"
								
				elif [ `basename $2 | grep "dmeventd"` ];then				
					mk_str $2 '/sbin/dmeventd' "${PRE}/sbin/dmeventd"
				fi
				
			elif [ "$3" = "rpcbind" ]; then
				
				mk_str $2 '/sbin/rpcbind' "${PRE}/bin/rpcbind"
			
			elif [ "$3" = "iptables" ]; then
			
				mk_str $2 '/sbin/$' '/usr/sbin/$'
			
			fi
		fi
	#else
		
	fi	
}

set_dist(){
	if [ "$DISTRIB_DESCRIPTION" = "Arch Linux" ];then
		PRE="/usr"
	else
		PRE=""
	fi
}

setup() {
	# $1: cfg file
	# $2: type
	
	while read line; do
		local OIFS=$IFS
		local IFS='/'
		
		local arr=($line)
		local dirname=${arr[1]}
		local filename
		if [ ${#arr[@]} == 5 ]; then
			filename=${arr[4]}
		else
			filename=${arr[3]}
		fi
		IFS=$OIFS
		mkdirs "$dirname/$2"
		local url="http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86"
		local file="${DATADIR}/${dirname}/$2/${filename}"
		local src="${url}/${line}"
		get_file "${file}" "${src}"
		check "$2" "${file}" "${dirname}"
	done < $1
}

main(){	
	set_dist
	setup "confd.list" "conf.d"
	setup "initd.list" "init.d"
	#tar -cvjf "${DATADIR}-${VER}.tar.${EXT}"  ${DATADIR}/${dirname}
}
